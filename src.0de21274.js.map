{"version":3,"sources":["grammar.js","index.js"],"names":["customRng","fs","lambda","x","i","seq","evaluate","pipe","rng","length","obj","o","result","k","eq","y","module","exports","name","root","set","pick","times","fork","uppercase","unless","when","get","toUpperCase","join","seed","title","color","uniform","shapes","floor","random","pupilRadius","primitive","alpha","vertex","offset","count","it","mul","val","div","minus","plus","corners","index","radius","prod","Regl","require","Grammar","gui","canvas","document","getElementById","next","copy","link","regl","draw","vert","frag","uniforms","prop","attributes","depth","enable","blend","func","src","dst","_","props","viewport","width","height","scene","render","domSize","Math","min","window","innerWidth","innerHeight","size","devicePixelRatio","style","clear","forEach","s","rgb","map","round","documentElement","background","update","hash","substr","location","innerText","value","addEventListener","success","focus","select","execCommand","e","blur","alert"],"mappings":";;;;;AAqBA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAjBA,IAAMA,EAAY,WAAIC,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAJ,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAIA,EAAJ,GAAA,UAAA,GAAWC,OAAAA,OAAO,SAAAC,GAE9BC,IAAAA,EAAI,EACFC,EAAMC,SAASH,EAAGI,KAAA,WAAQN,EAAAA,IACzBO,OAAAA,IAAI,WAAMH,OAAAA,EAAID,IAAMC,EAAII,aAE3BC,EAAM,SAAAC,GAAKT,OAAAA,OAAO,SAAAC,GAChBS,IAAAA,EAAS,GACV,IAAA,IAAMC,KAAKF,EACdC,EAAOC,GAAKP,SAASH,EAAGQ,EAAEE,IAErBD,OAAAA,KAEHE,EAAK,SAAAC,GAAKb,OAAAA,OAAO,SAAAC,GACrBG,OAAAA,SAASH,KAAOY,KAGlBC,OAAOC,QAAU,SAAAC,GAAQZ,OAAAA,SAASa,KAAMZ,KACtCa,IAAIF,KAAKA,EAAO,CAACA,GAAQX,KACvBc,KACEC,MAAMD,KAAK,EAAG,EAAG,IACjBE,KACED,MAAMD,KAAK,EAAG,IACd,IACAC,MAAMD,KAAK,EAAG,MAGlBD,IAAII,UAAUV,EAAG,IACjBW,OAAOX,EAAG,KAAMS,KACdhB,KACEc,KAAA,WAAQ,EAAA,EAAA,qBACRK,KAAKC,IAAIH,UAAWtB,OAAO,SAAAC,GAAKG,OAAAA,SAASH,GAAGyB,kBAE9CP,KAAA,WAAQ,EAAA,EAAA,cAGZD,IAAIF,KAAKhB,OAAO,SAAAC,GAAKA,OAAAA,EAAEe,KAAKW,KAAK,OACjCC,KAAKH,IAAIT,MAETE,IAAIW,MAAMR,KACRF,KAAK,QAAS,WAAY,WAAY,UAAW,YAAa,YAC5D,UAAW,WAAY,cAAe,aAAc,WAAY,SAAU,UAC5E,OACAA,KAAK,SAAU,QAAS,QAAS,SAAU,UAAW,QAAS,YAC7D,WAAY,SAAU,WAAY,aAAc,aAAc,UAC9D,WAAY,WAEhBD,IAAIW,MAAM7B,OAAO,SAAAC,GAAKA,OAAAA,EAAE4B,MAAMF,KAAK,OAEnCT,IAAIY,MAAMV,MAAM,GAAIW,QAAQ,GAAK,KACjCb,IAAIc,OACFZ,MAAM,GACNtB,EACEsB,MAAMa,MAAMF,QAAQ,EAAG,MACvBG,QAEFhB,IAAIiB,YAAYJ,QAAQ,IAAM,KAC9BV,KAEEhB,KACEe,MAAMa,MAAMF,QAAQ,EAAG,KACvBb,IAAIkB,UAAU,aACdlB,IAAIY,MAAMV,MAAM,GAAIc,QACpBhB,IAAImB,MAAMN,QAAQ,GAAK,IACvBb,IAAIoB,OACFpB,IAAIqB,OACFR,QAAQ,EAAG,KAEbb,IAAIsB,MACFT,QAAQ,EAAG,KACXE,MAAMQ,IACNC,IAAI,IAENtB,MAAMK,IAAIe,OACVG,IACEtB,KACEuB,IAAInB,IAAIe,OACRnC,KACEoB,IAAIU,YACJU,MAAMd,QAAQ,EAAGW,IAAI,MACrBI,KAAKf,QAAQ,EAAG,KAChBe,KAAKrB,IAAIc,aAOnBlC,KACEa,IAAI6B,QAAQ,IACZ7B,IAAIsB,MAAM,GACVtB,IAAIkB,UAAU,gBACdlB,IAAIY,MAAM,CAAC,EAAG,EAAG,IACjBV,MAAMK,IAAIe,OACVtB,IAAI8B,MAAMP,GAAIK,KAAK,IACnB5B,IAAI+B,OACFxB,IAAIU,YACJW,KAAKI,KAAKR,IAAI,IAAMjB,IAAIuB,SAE1B9B,IAAImB,MACFZ,IAAIe,MACJK,MAAMpB,IAAIuB,OACVJ,IAAInB,IAAIe,QAEVtB,IAAIoB,OAAOjB,KACTsB,IAAI,CAAC,EAAG,IACRtC,KACEe,MAAMK,IAAIsB,QAAQD,KAAK,KACvBH,IAAItB,KACFuB,IAAInB,IAAIsB,SACRtB,IAAIwB,cAMdzC,EAAI,CACFsB,MAAOL,IAAIK,MACXO,MAAOZ,IAAIY,MACXC,OAAQb,IAAIa,OACZF,UAAWX,IAAIW,aAGnB5B,EAAI,CACFQ,KAAMS,IAAIT,KACVa,MAAOJ,IAAII,MACXC,MAAOL,IAAIK,MACXE,OAAQP,IAAIO;;ACtChB,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA7FA,IAAMmB,EAAOC,QAAQ,QACfC,EAAUD,QAAQ,aAElBE,EAAM,CACVC,OAAQC,SAASC,eAAe,UAChCzC,KAAMwC,SAASC,eAAe,QAC9B5B,MAAO2B,SAASC,eAAe,SAC/BC,KAAMF,SAASC,eAAe,QAC9BE,KAAMH,SAASC,eAAe,QAC9BG,KAAMJ,SAASC,eAAe,SAG1BI,EAAOV,EAAKG,EAAIC,QAChBO,EAAOD,EAAK,CAEhBE,KAFgB,0RAchBC,KAdgB,iKAsBhBC,SAAU,CACRnC,MAAO+B,EAAKK,KAAK,SACjB7B,MAAOwB,EAAKK,KAAK,UAEnBC,WAAY,CACV7B,OAAQuB,EAAKK,KAAK,WAEpBE,MAAO,CACLC,QAAQ,GAEVC,MAAO,CACLD,QAAQ,EACRE,KAAM,CACJC,IAAK,MACLC,IAAK,wBAGTjC,MAAO,SAACkC,EAAGC,GAAUA,OAAAA,EAAMrC,OAAO/B,QAClC6B,UAAWyB,EAAKK,KAAK,aACrBU,SAAU,CACR3E,EAAG,EACHY,EAAG,EACHgE,MAAOhB,EAAKK,KAAK,QACjBY,OAAQjB,EAAKK,KAAK,WAIlBa,EAAQ,GAENC,EAAS,WACPC,IAAAA,EAAUC,KAAKC,IAAIC,OAAOC,WAAYD,OAAOE,aAC7CC,EAAON,EAAUG,OAAOI,iBAC9BlC,EAAIC,OAAOkC,MAAMZ,MAAQI,EAAU,KACnC3B,EAAIC,OAAOkC,MAAMX,OAASG,EAAU,KACpC3B,EAAIC,OAAOsB,MAAQU,EACnBjC,EAAIC,OAAOuB,OAASS,EACpB1B,EAAK6B,MAAM,CAAC5D,MAAWiD,GAAAA,OAAAA,EAAAA,EAAMjD,OAAO,CAAA,MACpCiD,EAAM/C,OAAO2D,QAAQ,SAAAC,GAAK9B,OAAAA,EAAS8B,EAAAA,EAAAA,GAAAA,GAAL,GAAA,CAAQL,KAAAA,OAChCM,IAAAA,EAAMd,EAAMjD,MAAMgE,IAAI,SAAA7F,GAAKiF,OAAAA,KAAKa,MAAU,IAAJ9F,KAAU0B,KAAK,MAC3D6B,SAASwC,gBAAgBP,MAAMQ,WAAoBJ,OAAAA,OAAAA,EAAnD,MAGIK,EAAS,SAAAC,GACPnF,IAAAA,EAAOmF,EAAOA,EAAKC,OAAO,GAAK,KACjCpF,IAAS+D,EAAM/D,OACnB+D,EAAQ1B,EAAQrC,GAChBoE,OAAOiB,SAASF,KAAOpB,EAAM/D,KAC7BwC,SAAS3B,MAAQkD,EAAM/D,KAAO,KAAO+D,EAAMlD,MAC3CyB,EAAItC,KAAKsF,UAAYvB,EAAM/D,KAC3BsC,EAAIzB,MAAMyE,UAAYvB,EAAMlD,MAC5ByB,EAAIM,KAAK2C,MAAQ,mDAAqDxB,EAAM/D,KAC5EgE,MAGFI,OAAOoB,iBAAiB,eAAgB,WAAMN,OAAAA,EAAOd,OAAOiB,SAASF,MAAQ,QAC7Ef,OAAOoB,iBAAiB,SAAU,WAAMxB,OAAAA,MACxCI,OAAOoB,iBAAiB,aAAc,WAAMN,OAAAA,EAAOd,OAAOiB,SAASF,QACnE7C,EAAII,KAAK8C,iBAAiB,QAAS,WAAMN,OAAAA,MACzC5C,EAAIK,KAAK6C,iBAAiB,QAAS,WAG7BC,IAAAA,EAFJnD,EAAIM,KAAK8C,QACTpD,EAAIM,KAAK+C,SAEL,IACFF,EAAUjD,SAASoD,YAAY,QAC/B,MAAOC,GACPJ,GAAU,EAEZnD,EAAIM,KAAKkD,OACT1B,OAAO2B,MAAMN,EAC8H1B,uIAAAA,OAAAA,EAAM/D,KAC7I,KAAA","file":"src.0de21274.js","sourceRoot":"../src","sourcesContent":["// NOTE: this files assumes the lambda.min.js library is in the global scope\n// you should disable everything but syntax checks for this file\n\n// TODO: integrate helpers into library\nconst customRng = (...fs) => lambda(x => {\n  // e.g. this is essentially a rotating scale\n  let i = 0\n  const seq = evaluate(x, pipe(...fs))\n  return rng(() => seq[i++ % seq.length])\n})\nconst obj = o => lambda(x => {\n  const result = {}\n  for (const k in o) {\n    result[k] = evaluate(x, o[k])\n  }\n  return result\n})\nconst eq = y => lambda(x =>\n  evaluate(x) === y\n)\n\nmodule.exports = name => evaluate(root, pipe(\n  set.name(name ? [name] : pipe(\n    pick(\n      times(pick(2, 3, 4)),\n      fork(\n        times(pick(1, 2)),\n        '-',\n        times(pick(1, 2))\n      )\n    ),\n    set.uppercase(eq(0)),\n    unless(eq('-'), fork(\n      pipe(\n        pick(...'bdfgklmnprstwxyz'),\n        when(get.uppercase, lambda(x => evaluate(x).toUpperCase()))\n      ),\n      pick(...'aeiou'),\n    )),\n  )),\n  set.name(lambda(x => x.name.join(''))),\n  seed(get.name),\n\n  set.title(fork(\n    pick('Eater', 'Consumer', 'Pillager', 'Ravager', 'Destroyer', 'Corrupter',\n      'Tainter', 'Torturer', 'Executioner', 'Inquisitor', 'Enslaver', 'Master', 'Tyrant'),\n    ' of ',\n    pick('Worlds', 'Souls', 'Minds', 'Brains', 'Planets', 'Stars', 'Universes',\n      'Galaxies', 'Dreams', 'the Void', 'Dimensions', 'the Unseen', 'Shadows',\n      'the Deep', 'Death')\n  )),\n  set.title(lambda(x => x.title.join(''))),\n\n  set.color(times(3), uniform(0.1, 0.2)),\n  set.shapes(\n    times(1),\n    customRng(\n      times(floor(uniform(3, 40))),\n      random\n    ),\n    set.pupilRadius(uniform(0.05, 0.2)),\n    fork(\n      // iris\n      pipe(\n        times(floor(uniform(2, 8))),\n        set.primitive('triangles'),\n        set.color(times(3), random),\n        set.alpha(uniform(0.7, 1)),\n        set.vertex(\n          set.offset(\n            uniform(0, 0.4)\n          ),\n          set.count(\n            uniform(5, 100),\n            floor(it),\n            mul(3)\n          ),\n          times(get.count),\n          val(\n            fork(\n              div(get.count),\n              pipe(\n                get.pupilRadius,\n                minus(uniform(0, mul(0.2))),\n                plus(uniform(0, 0.3)),\n                plus(get.offset)\n              )\n            )\n          )\n        )\n      ),\n      // pupil\n      pipe(\n        set.corners(40),\n        set.count(5),\n        set.primitive('triangle fan'),\n        set.color([0, 0, 0]),\n        times(get.count),\n        set.index(it, plus(1)),\n        set.radius(\n          get.pupilRadius,\n          plus(prod(mul(0.2), get.index))\n        ),\n        set.alpha(\n          get.count,\n          minus(get.index),\n          div(get.count)\n        ),\n        set.vertex(fork(\n          val([0, 0]),\n          pipe(\n            times(get.corners(plus(1))),\n            val(fork(\n              div(get.corners),\n              get.radius\n            ))\n          )\n        ))\n      )\n    ),\n    obj({\n      color: get.color,\n      alpha: get.alpha,\n      vertex: get.vertex,\n      primitive: get.primitive\n    })\n  ),\n  obj({\n    name: get.name,\n    title: get.title,\n    color: get.color,\n    shapes: get.shapes\n  })\n))\n","const Regl = require('regl')\nconst Grammar = require('./grammar')\n\nconst gui = {\n  canvas: document.getElementById('canvas'),\n  name: document.getElementById('name'),\n  title: document.getElementById('title'),\n  next: document.getElementById('next'),\n  copy: document.getElementById('copy'),\n  link: document.getElementById('link')\n}\n\nconst regl = Regl(gui.canvas)\nconst draw = regl({\n  // language=GLSL\n  vert: `\n    #define PI 3.1415926535897932384626433832795\n    attribute vec2 vertex;\n    void main (void) {\n      float a = vertex.x * 2.0 * PI;\n      float r = vertex.y;\n      float x = r * cos(a);\n      float y = r * sin(a);\n      gl_Position = vec4(x, y, 0.0, 1.0);\n    }\n  `,\n  // language=GLSL\n  frag: `\n    precision mediump float;\n    uniform vec3 color;\n    uniform float alpha;\n    void main (void) {\n      gl_FragColor = vec4(color, alpha);\n    }\n  `,\n  uniforms: {\n    color: regl.prop('color'),\n    alpha: regl.prop('alpha')\n  },\n  attributes: {\n    vertex: regl.prop('vertex')\n  },\n  depth: {\n    enable: true\n  },\n  blend: {\n    enable: true,\n    func: {\n      src: 'one',\n      dst: 'one minus src alpha'\n    }\n  },\n  count: (_, props) => props.vertex.length,\n  primitive: regl.prop('primitive'),\n  viewport: {\n    x: 0,\n    y: 0,\n    width: regl.prop('size'),\n    height: regl.prop('size')\n  },\n})\n\nlet scene = {}\n\nconst render = () => {\n  const domSize = Math.min(window.innerWidth, window.innerHeight)\n  const size = domSize * window.devicePixelRatio\n  gui.canvas.style.width = domSize + 'px'\n  gui.canvas.style.height = domSize + 'px'\n  gui.canvas.width = size\n  gui.canvas.height = size\n  regl.clear({color: [...scene.color, 1]})\n  scene.shapes.forEach(s => draw({...s, size}))\n  const rgb = scene.color.map(x => Math.round(x * 255)).join(', ')\n  document.documentElement.style.background = `rgb(${rgb})`\n}\n\nconst update = hash => {\n  const name = hash ? hash.substr(1) : null\n  if (name === scene.name) return\n  scene = Grammar(name)\n  window.location.hash = scene.name\n  document.title = scene.name + ', ' + scene.title\n  gui.name.innerText = scene.name\n  gui.title.innerText = scene.title\n  gui.link.value = 'https://lambda.website/cthulhu-holder-of-spork/#' + scene.name\n  render()\n}\n\nwindow.addEventListener('custom-ready', () => update(window.location.hash || null))\nwindow.addEventListener('resize', () => render())\nwindow.addEventListener('hashchange', () => update(window.location.hash))\ngui.next.addEventListener('click', () => update())\ngui.copy.addEventListener('click', () => {\n  gui.link.focus()\n  gui.link.select()\n  let success\n  try {\n    success = document.execCommand('copy')\n  } catch (e) {\n    success = false\n  }\n  gui.link.blur()\n  window.alert(success\n    ? `The link was copied to your clipboard. Spread the W̴̢͇̱̯̱̫̻̙͕͎̟̒̐̃̿ͅȌ̴̰͙͓̟͓̦̥̎́̓͒̕̕R̷̻͎̺͍̆̓̐̚͜Ḑ̸̨̪͖͚̩̳͈̙͖̄̂̋̋̔̓̚ of our dark lord ${scene.name}!`\n    : 'A mysterious power prevented this action.'\n  )\n})\n"]}