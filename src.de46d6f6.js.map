{"version":3,"sources":["grammar.js","index.js"],"names":["module","exports","n","customRng","obj","o","lambda","x","result","k","evaluate","vec3","val","times","consonant","pick","vowel","word","length","join","pipe","u","eq","set","upperCase","when","get","name","ruler","domain","title","iris","floor","uniform","primitive","color","random","alpha","vertex","offset","count","it","mul","fork","div","pupilRadius","minus","plus","pupil","corners","index","radius","prod","shape","scene","shapes","eye","seed","fs","i","seq","rng","root","Regl","require","Grammar","gui","canvas","document","getElementById","next","copy","link","fit","w","h","regl","draw","vert","frag","uniforms","prop","ratio","ctx","viewportWidth","viewportHeight","attributes","depth","enable","blend","func","src","dst","_","props","viewport","y","width","_gl","height","render","domSize","size","Math","min","window","innerWidth","innerHeight","devicePixelRatio","clear","forEach","s","rgb","map","round","documentElement","style","background","update","hash","substr","location","innerText","value","addEventListener","success","focus","select","execCommand","e","blur","alert"],"mappings":"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","file":"src.de46d6f6.js","sourceRoot":"../src","sourcesContent":["// NOTE: this files assumes the lambda.min.js library is in the global scope\n// you should disable everything but syntax checks for this file\nmodule.exports = n => {\n  const customRng = (...fs) => lambda(x => {\n    // e.g. this is essentially a rotating scale\n    let i = 0\n    const seq = evaluate(x, pipe(...fs))\n    return rng(() => seq[i++ % seq.length])\n  })\n\n  const obj = o => lambda(x => {\n    const result = {}\n    for (const k in o) {\n      result[k] = evaluate(x, o[k])\n    }\n    return result\n  })\n\n  const vec3 = n => val(times(3, n))\n\n  const consonant = pick(...'bdfgklmnprstwxyz')\n\n  const vowel = pick(...'aeiou')\n\n  const syllable = u => pipe(\n    set.upperCase(u),\n    join(\n      pipe(\n        consonant,\n        when(get.upperCase, upperCase)\n      ),\n      vowel\n    )\n  )\n\n  const word = length => join(\n    pipe(\n      times(length),\n      syllable(eq(0))\n    )\n  )\n\n  const name = pick(\n    word(pick(2, 3, 4)),\n    join(\n      word(pick(1, 2)),\n      '-',\n      word(pick(1, 2))\n    )\n  )\n\n  const ruler = pick(\n    'Eater',\n    'Consumer',\n    'Pillager',\n    'Ravager',\n    'Destroyer',\n    'Corrupter',\n    'Tainter',\n    'Torturer',\n    'Executioner',\n    'Inquisitor',\n    'Enslaver',\n    'Master',\n    'Tyrant'\n  )\n\n  const domain = pick(\n    'Dreams',\n    'the Void',\n    'Dimensions',\n    'the Unseen',\n    'Shadows',\n    'the Deep',\n    'Death'\n  )\n\n  const title = join(\n    ruler,\n    ' of ',\n    domain\n  )\n\n  const iris = pipe(\n    times(floor(uniform(2, 8))),\n    set.primitive('triangles'),\n    set.color(vec3(random)),\n    set.alpha(uniform(0.7, 1)),\n    set.vertex(\n      set.offset(\n        uniform(0, 0.4)\n      ),\n      set.count(\n        uniform(5, 100),\n        floor(it),\n        mul(3)\n      ),\n      times(get.count),\n      val(\n        fork(\n          div(get.count),\n          pipe(\n            get.pupilRadius,\n            minus(uniform(0, mul(0.2))),\n            plus(uniform(0, 0.3)),\n            plus(get.offset)\n          )\n        )\n      )\n    )\n  )\n\n  const pupil = pipe(\n    set.corners(40),\n    set.count(5),\n    set.primitive('triangle fan'),\n    set.color(vec3(0)),\n    times(get.count),\n    set.index(it, plus(1)),\n    set.radius(\n      get.pupilRadius,\n      plus(prod(mul(0.2), get.index))\n    ),\n    set.alpha(\n      get.count,\n      minus(get.index),\n      div(get.count)\n    ),\n    set.vertex(fork(\n      val([0, 0]),\n      pipe(\n        times(get.corners(plus(1))),\n        val(fork(\n          div(get.corners),\n          get.radius\n        ))\n      )\n    ))\n  )\n\n  const shape = obj({\n    color: get.color,\n    alpha: get.alpha,\n    vertex: get.vertex,\n    primitive: get.primitive\n  })\n\n  const scene = obj({\n    name: get.name,\n    title: get.title,\n    color: get.color,\n    shapes: get.shapes\n  })\n\n  const eye = pipe(\n    set.name(n ? [n] : name),\n    seed(get.name),\n    set.title(title),\n    set.color(vec3(uniform(0.1, 0.2))),\n    set.shapes(\n      customRng(\n        times(floor(uniform(3, 40))),\n        random\n      ),\n      set.pupilRadius(uniform(0.05, 0.2)),\n      fork(iris, pupil),\n      shape\n    ),\n    scene\n  )\n\n  return evaluate(root, eye)\n}\n","const Regl = require('regl')\nconst Grammar = require('./grammar')\n\nconst gui = {\n  canvas: document.getElementById('canvas'),\n  name: document.getElementById('name'),\n  title: document.getElementById('title'),\n  next: document.getElementById('next'),\n  copy: document.getElementById('copy'),\n  link: document.getElementById('link')\n}\n\nconst fit = (w, h) => w > h\n  ? [h / w, 1]\n  : [1, w / h]\n\nconst regl = Regl(gui.canvas)\nconst draw = regl({\n  // language=GLSL\n  vert: `\n    #define PI 3.1415926535897932384626433832795\n    attribute vec2 vertex;\n    uniform vec2 ratio;\n    void main (void) {\n      float a = vertex.x * 2.0 * PI;\n      float r = vertex.y;\n      float x = r * cos(a);\n      float y = r * sin(a);\n      gl_Position = vec4(ratio * vec2(x, y), 0.0, 1.0);\n    }\n  `,\n  // language=GLSL\n  frag: `\n    precision mediump float;\n    uniform vec3 color;\n    uniform float alpha;\n    void main (void) {\n      gl_FragColor = vec4(color, alpha);\n    }\n  `,\n  uniforms: {\n    color: regl.prop('color'),\n    alpha: regl.prop('alpha'),\n    ratio: ctx => fit(\n      ctx.viewportWidth,\n      ctx.viewportHeight\n    )\n  },\n  attributes: {\n    vertex: regl.prop('vertex')\n  },\n  depth: {\n    enable: true\n  },\n  blend: {\n    enable: true,\n    func: {\n      src: 'one',\n      dst: 'one minus src alpha'\n    }\n  },\n  count: (_, props) => props.vertex.length,\n  primitive: regl.prop('primitive'),\n  viewport: {\n    x: 0,\n    y: 0,\n    width: () => regl._gl.canvas.width,\n    height: () => regl._gl.canvas.height\n  }\n})\n\nlet scene = {}\n\nconst render = () => {\n  const domSize = Math.min(window.innerWidth, window.innerHeight)\n  const size = domSize * window.devicePixelRatio\n  gui.canvas.width = window.innerWidth * window.devicePixelRatio\n  gui.canvas.height = window.innerHeight * window.devicePixelRatio\n  regl.clear({color: [...scene.color, 1]})\n  scene.shapes.forEach(s => draw({...s, size}))\n  const rgb = scene.color.map(x => Math.round(x * 255)).join(', ')\n  document.documentElement.style.background = `rgb(${rgb})`\n}\n\nconst update = hash => {\n  const name = hash ? hash.substr(1) : null\n  if (name === scene.name) return\n  scene = Grammar(name)\n  window.location.hash = scene.name\n  document.title = scene.name + ', ' + scene.title\n  gui.name.innerText = scene.name\n  gui.title.innerText = scene.title\n  gui.link.value = window.location\n  render()\n}\n\nwindow.addEventListener('custom-ready', () => update(window.location.hash || null))\nwindow.addEventListener('resize', () => render())\nwindow.addEventListener('hashchange', () => update(window.location.hash))\ngui.next.addEventListener('click', () => update())\ngui.copy.addEventListener('click', () => {\n  gui.link.focus()\n  gui.link.select()\n  let success\n  try {\n    success = document.execCommand('copy')\n  } catch (e) {\n    success = false\n  }\n  gui.link.blur()\n  window.alert(success\n    ? `The link was copied to your clipboard. Spread the W̴̢͇̱̯̱̫̻̙͕͎̟̒̐̃̿ͅȌ̴̰͙͓̟͓̦̥̎́̓͒̕̕R̷̻͎̺͍̆̓̐̚͜Ḑ̸̨̪͖͚̩̳͈̙͖̄̂̋̋̔̓̚ of our dark lord ${scene.name}!`\n    : 'A mysterious power prevented this action.'\n  )\n})\n"]}