{"version":3,"sources":["effect/polar.js","effect/reflection.js","effect/base.js","../node_modules/resl/index.js","grammar.js","index.js"],"names":["polar","regl","vert","frag","uniforms","color","prop","alpha","speed","depth","attributes","vertex","blend","enable","func","src","dst","count","_","props","length","primitive","reflection","image","radius","base","viewport","x","y","width","_gl","canvas","height","time","context","ratio","w","viewportWidth","h","viewportHeight","module","exports","n","customRng","obj","o","lambda","result","k","evaluate","vec3","val","times","consonant","pick","vowel","word","join","pipe","u","eq","set","upperCase","when","get","name","ruler","domain","title","iris","floor","uniform","mul","random","offset","it","fork","div","minus","plus","pupil","corners","indexR","index","negate","prod","shape","scene","shapes","eye","seed","fs","i","seq","rng","root","Regl","require","resl","Grammar","gui","document","getElementById","next","copy","link","drawBase","drawPolar","drawReflection","texture","data","update","hash","substr","window","location","innerText","value","copyLink","success","focus","select","execCommand","e","blur","alert","addEventListener","frame","innerWidth","devicePixelRatio","innerHeight","clear","forEach","s","manifest","type","parser","mag","min","wrapS","wrapT","onDone","res"],"mappings":"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","file":"src.7ece95d8.js","sourceRoot":"../src","sourcesContent":["export const polar = regl => regl({\n  // language=GLSL\n  vert: `\n    #define PI 3.1415926535897932384626433832795\n    attribute vec2 vertex;\n    uniform vec2 ratio;\n    uniform float depth;\n    uniform float speed;\n    uniform float time;\n    void main (void) {\n      float a = (vertex.x + speed * time) * 2.0 * PI;\n      float r = vertex.y * (sin(speed * 20.0 * time) / 5.0 + 0.9);\n      float x = r * cos(a);\n      float y = r * sin(a);\n      gl_Position = vec4(ratio * vec2(x, y), depth, 1.0);\n    }\n  `,\n  // language=GLSL\n  frag: `\n    precision mediump float;\n    uniform vec3 color;\n    uniform float alpha;\n    void main (void) {\n      gl_FragColor = vec4(color, alpha);\n    }\n  `,\n  uniforms: {\n    color: regl.prop('color'),\n    alpha: regl.prop('alpha'),\n    speed: regl.prop('speed'),\n    depth: regl.prop('depth')\n  },\n  attributes: {\n    vertex: regl.prop('vertex')\n  },\n  blend: {\n    enable: true,\n    func: {\n      src: 'src alpha',\n      dst: 'one minus src alpha'\n    }\n  },\n  count: (_, props) => props.vertex.length,\n  primitive: regl.prop('primitive'),\n})\n","export const reflection = regl => regl({\n  // language=GLSL\n  vert: `\n    attribute vec2 vertex;\n    uniform vec2 ratio;\n    varying vec2 clip;\n    void main (void) {\n      clip = vertex / ratio;\n      gl_Position = vec4(vertex, -1.0, 1.0);\n    }\n  `,\n  // language=GLSL\n  frag: `\n    #define PI 3.1415926535897932384626433832795\n    precision mediump float;\n    varying vec2 clip;\n    uniform sampler2D image;\n    uniform float time;\n    uniform float radius;\n\n    vec2 lookup(vec3 pos) {\n      float phi = atan(pos.y / pos.x);\n      float theta = atan(pos.y / pos.z / sin(phi));\n      return vec2(phi / PI, theta / PI);\n    }\n    \n    void main (void) {\n      vec2 xy = clip / vec2(radius * 1.5, radius * 1.5);\n      float rr = xy.x * xy.x + xy.y * xy.y;\n      float z = sqrt(1.0 - rr);\n      vec3 pos = vec3(-z, xy.y, -xy.x);\n      vec2 uv = lookup(pos) + vec2(time / 100.0, time / 100.0);\n      float s = pow(texture2D(image, uv).r - 0.1, 2.0);\n      //float alpha = 1.0 - pow(1.0 + dot(vec3(0, 0, -1), vec3(xy, z)), 4.0);\n      float a = 1.0 - sqrt(rr);\n      gl_FragColor = vec4(s, s, s, a);\n    }\n  `,\n  uniforms: {\n    image: regl.prop('image'),\n    radius: regl.prop('radius')\n  },\n  attributes: {\n    vertex: [\n      [-1, -1],\n      [+1, -1],\n      [-1, +1],\n      [+1, +1]\n    ]\n  },\n  blend: {\n    enable: true,\n    func: {\n      src: 'src alpha',\n      dst: 'one'\n    }\n  },\n  count: 4,\n  primitive: 'triangle strip'\n})","export const base = regl => regl({\n  depth: {\n    enable: false\n  },\n  viewport: {\n    x: 0,\n    y: 0,\n    width: () => regl._gl.canvas.width,\n    height: () => regl._gl.canvas.height\n  },\n  uniforms: {\n    time: regl.context('time'),\n    ratio: ({viewportWidth: w, viewportHeight: h}) => w > h\n      ? [h / w, 1]\n      : [1, w / h]\n  }\n})\n","/* global XMLHttpRequest */\nvar configParameters = [\n  'manifest',\n  'onDone',\n  'onProgress',\n  'onError'\n]\n\nvar manifestParameters = [\n  'type',\n  'src',\n  'stream',\n  'credentials',\n  'parser'\n]\n\nvar parserParameters = [\n  'onData',\n  'onDone'\n]\n\nvar STATE_ERROR = -1\nvar STATE_DATA = 0\nvar STATE_COMPLETE = 1\n\nfunction raise (message) {\n  throw new Error('resl: ' + message)\n}\n\nfunction checkType (object, parameters, name) {\n  Object.keys(object).forEach(function (param) {\n    if (parameters.indexOf(param) < 0) {\n      raise('invalid parameter \"' + param + '\" in ' + name)\n    }\n  })\n}\n\nfunction Loader (name, cancel) {\n  this.state = STATE_DATA\n  this.ready = false\n  this.progress = 0\n  this.name = name\n  this.cancel = cancel\n}\n\nmodule.exports = function resl (config) {\n  if (typeof config !== 'object' || !config) {\n    raise('invalid or missing configuration')\n  }\n\n  checkType(config, configParameters, 'config')\n\n  var manifest = config.manifest\n  if (typeof manifest !== 'object' || !manifest) {\n    raise('missing manifest')\n  }\n\n  function getFunction (name, dflt) {\n    if (name in config) {\n      var func = config[name]\n      if (typeof func !== 'function') {\n        raise('invalid callback \"' + name + '\"')\n      }\n      return func\n    }\n    return null\n  }\n\n  var onDone = getFunction('onDone')\n  if (!onDone) {\n    raise('missing onDone() callback')\n  }\n\n  var onProgress = getFunction('onProgress')\n  var onError = getFunction('onError')\n\n  var assets = {}\n\n  var state = STATE_DATA\n\n  function loadXHR (request) {\n    var name = request.name\n    var stream = request.stream\n    var binary = request.type === 'binary'\n    var parser = request.parser\n\n    var xhr = new XMLHttpRequest()\n    var asset = null\n\n    var loader = new Loader(name, cancel)\n\n    if (stream) {\n      xhr.onreadystatechange = onReadyStateChange\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          onReadyStateChange()\n        }\n      }\n    }\n\n    if (binary) {\n      xhr.responseType = 'arraybuffer'\n    }\n\n    function onReadyStateChange () {\n      if (xhr.readyState < 2 ||\n          loader.state === STATE_COMPLETE ||\n          loader.state === STATE_ERROR) {\n        return\n      }\n      if (xhr.status !== 200) {\n        return abort('error loading resource \"' + request.name + '\"')\n      }\n      if (xhr.readyState > 2 && loader.state === STATE_DATA) {\n        var response\n        if (request.type === 'binary') {\n          response = xhr.response\n        } else {\n          response = xhr.responseText\n        }\n        if (parser.data) {\n          try {\n            asset = parser.data(response)\n          } catch (e) {\n            return abort(e)\n          }\n        } else {\n          asset = response\n        }\n      }\n      if (xhr.readyState > 3 && loader.state === STATE_DATA) {\n        if (parser.done) {\n          try {\n            asset = parser.done()\n          } catch (e) {\n            return abort(e)\n          }\n        }\n        loader.state = STATE_COMPLETE\n      }\n      assets[name] = asset\n      loader.progress = 0.75 * loader.progress + 0.25\n      loader.ready =\n        (request.stream && !!asset) ||\n        loader.state === STATE_COMPLETE\n      notifyProgress()\n    }\n\n    function cancel () {\n      if (loader.state === STATE_COMPLETE || loader.state === STATE_ERROR) {\n        return\n      }\n      xhr.onreadystatechange = null\n      xhr.abort()\n      loader.state = STATE_ERROR\n    }\n\n    // set up request\n    if (request.credentials) {\n      xhr.withCredentials = true\n    }\n    xhr.open('GET', request.src, true)\n    xhr.send()\n\n    return loader\n  }\n\n  function loadElement (request, element) {\n    var name = request.name\n    var parser = request.parser\n\n    var loader = new Loader(name, cancel)\n    var asset = element\n\n    function handleProgress () {\n      if (loader.state === STATE_DATA) {\n        if (parser.data) {\n          try {\n            asset = parser.data(element)\n          } catch (e) {\n            return abort(e)\n          }\n        } else {\n          asset = element\n        }\n      }\n    }\n\n    function onProgress (e) {\n      handleProgress()\n      assets[name] = asset\n      if (e.lengthComputable) {\n        loader.progress = Math.max(loader.progress, e.loaded / e.total)\n      } else {\n        loader.progress = 0.75 * loader.progress + 0.25\n      }\n      notifyProgress(name)\n    }\n\n    function onComplete () {\n      handleProgress()\n      if (loader.state === STATE_DATA) {\n        if (parser.done) {\n          try {\n            asset = parser.done()\n          } catch (e) {\n            return abort(e)\n          }\n        }\n        loader.state = STATE_COMPLETE\n      }\n      loader.progress = 1\n      loader.ready = true\n      assets[name] = asset\n      removeListeners()\n      notifyProgress('finish ' + name)\n    }\n\n    function onError () {\n      abort('error loading asset \"' + name + '\"')\n    }\n\n    if (request.stream) {\n      element.addEventListener('progress', onProgress)\n    }\n    if (request.type === 'image') {\n      element.addEventListener('load', onComplete)\n    } else {\n      var canPlay = false\n      var loadedMetaData = false\n      element.addEventListener('loadedmetadata', function () {\n        loadedMetaData = true\n        if (canPlay) {\n          onComplete()\n        }\n      })\n      element.addEventListener('canplay', function () {\n        canPlay = true\n        if (loadedMetaData) {\n          onComplete()\n        }\n      })\n    }\n    element.addEventListener('error', onError)\n\n    function removeListeners () {\n      if (request.stream) {\n        element.removeEventListener('progress', onProgress)\n      }\n      if (request.type === 'image') {\n        element.addEventListener('load', onComplete)\n      } else {\n        element.addEventListener('canplay', onComplete)\n      }\n      element.removeEventListener('error', onError)\n    }\n\n    function cancel () {\n      if (loader.state === STATE_COMPLETE || loader.state === STATE_ERROR) {\n        return\n      }\n      loader.state = STATE_ERROR\n      removeListeners()\n      element.src = ''\n    }\n\n    // set up request\n    if (request.credentials) {\n      element.crossOrigin = 'use-credentials'\n    } else {\n      element.crossOrigin = 'anonymous'\n    }\n    element.src = request.src\n\n    return loader\n  }\n\n  var loaders = {\n    text: loadXHR,\n    binary: function (request) {\n      // TODO use fetch API for streaming if supported\n      return loadXHR(request)\n    },\n    image: function (request) {\n      return loadElement(request, document.createElement('img'))\n    },\n    video: function (request) {\n      return loadElement(request, document.createElement('video'))\n    },\n    audio: function (request) {\n      return loadElement(request, document.createElement('audio'))\n    }\n  }\n\n  // First we parse all objects in order to verify that all type information\n  // is correct\n  var pending = Object.keys(manifest).map(function (name) {\n    var request = manifest[name]\n    if (typeof request === 'string') {\n      request = {\n        src: request\n      }\n    } else if (typeof request !== 'object' || !request) {\n      raise('invalid asset definition \"' + name + '\"')\n    }\n\n    checkType(request, manifestParameters, 'asset \"' + name + '\"')\n\n    function getParameter (prop, accepted, init) {\n      var value = init\n      if (prop in request) {\n        value = request[prop]\n      }\n      if (accepted.indexOf(value) < 0) {\n        raise('invalid ' + prop + ' \"' + value + '\" for asset \"' + name + '\", possible values: ' + accepted)\n      }\n      return value\n    }\n\n    function getString (prop, required, init) {\n      var value = init\n      if (prop in request) {\n        value = request[prop]\n      } else if (required) {\n        raise('missing ' + prop + ' for asset \"' + name + '\"')\n      }\n      if (typeof value !== 'string') {\n        raise('invalid ' + prop + ' for asset \"' + name + '\", must be a string')\n      }\n      return value\n    }\n\n    function getParseFunc (name, dflt) {\n      if (name in request.parser) {\n        var result = request.parser[name]\n        if (typeof result !== 'function') {\n          raise('invalid parser callback ' + name + ' for asset \"' + name + '\"')\n        }\n        return result\n      } else {\n        return dflt\n      }\n    }\n\n    var parser = {}\n    if ('parser' in request) {\n      if (typeof request.parser === 'function') {\n        parser = {\n          data: request.parser\n        }\n      } else if (typeof request.parser === 'object' && request.parser) {\n        checkType(parser, parserParameters, 'parser for asset \"' + name + '\"')\n        if (!('onData' in parser)) {\n          raise('missing onData callback for parser in asset \"' + name + '\"')\n        }\n        parser = {\n          data: getParseFunc('onData'),\n          done: getParseFunc('onDone')\n        }\n      } else {\n        raise('invalid parser for asset \"' + name + '\"')\n      }\n    }\n\n    return {\n      name: name,\n      type: getParameter('type', Object.keys(loaders), 'text'),\n      stream: !!request.stream,\n      credentials: !!request.credentials,\n      src: getString('src', true, ''),\n      parser: parser\n    }\n  }).map(function (request) {\n    return (loaders[request.type])(request)\n  })\n\n  function abort (message) {\n    if (state === STATE_ERROR || state === STATE_COMPLETE) {\n      return\n    }\n    state = STATE_ERROR\n    pending.forEach(function (loader) {\n      loader.cancel()\n    })\n    if (onError) {\n      if (typeof message === 'string') {\n        onError(new Error('resl: ' + message))\n      } else {\n        onError(message)\n      }\n    } else {\n      console.error('resl error:', message)\n    }\n  }\n\n  function notifyProgress (message) {\n    if (state === STATE_ERROR || state === STATE_COMPLETE) {\n      return\n    }\n\n    var progress = 0\n    var numReady = 0\n    pending.forEach(function (loader) {\n      if (loader.ready) {\n        numReady += 1\n      }\n      progress += loader.progress\n    })\n\n    if (numReady === pending.length) {\n      state = STATE_COMPLETE\n      onDone(assets)\n    } else {\n      if (onProgress) {\n        onProgress(progress / pending.length, message)\n      }\n    }\n  }\n\n  if (pending.length === 0) {\n    setTimeout(function () {\n      notifyProgress('done')\n    }, 1)\n  }\n}\n","// NOTE: this files assumes the lambda.min.js library is in the global scope\n// you should disable everything but syntax checks for this file\nmodule.exports = n => {\n  const customRng = (...fs) => lambda(x => {\n    // e.g. this is essentially a rotating scale\n    let i = 0\n    const seq = evaluate(x, pipe(...fs))\n    return rng(() => seq[i++ % seq.length])\n  })\n\n  const obj = o => lambda(x => {\n    const result = {}\n    for (const k in o) {\n      result[k] = evaluate(x, o[k])\n    }\n    return result\n  })\n\n  const vec3 = n => val(times(3, n))\n\n  const consonant = pick(...'bdfgklmnprstwxyz')\n\n  const vowel = pick(...'aeiou')\n\n  const syllable = u => pipe(\n    set.upperCase(u),\n    join(\n      pipe(\n        consonant,\n        when(get.upperCase, upperCase)\n      ),\n      vowel\n    )\n  )\n\n  const word = length => join(\n    pipe(\n      times(length),\n      syllable(eq(0))\n    )\n  )\n\n  const name = pick(\n    word(pick(2, 3, 4)),\n    join(\n      word(pick(1, 2)),\n      '-',\n      word(pick(1, 2))\n    )\n  )\n\n  const ruler = pick(\n    'Eater',\n    'Consumer',\n    'Pillager',\n    'Ravager',\n    'Destroyer',\n    'Corrupter',\n    'Tainter',\n    'Torturer',\n    'Executioner',\n    'Inquisitor',\n    'Enslaver',\n    'Master',\n    'Tyrant'\n  )\n\n  const domain = pick(\n    'Dreams',\n    'the Void',\n    'Dimensions',\n    'the Unseen',\n    'Shadows',\n    'the Deep',\n    'Death'\n  )\n\n  const title = join(\n    ruler,\n    ' of ',\n    domain\n  )\n\n  const iris = pipe(\n    times(floor(uniform(2, 8))),\n    set.primitive('triangles'),\n    set.depth(0),\n    set.speed(uniform(1/240, 1/60), mul(pick(1, -1))),\n    set.color(vec3(random)),\n    set.alpha(1),\n    set.vertex(\n      set.offset(\n        uniform(0, 0.4)\n      ),\n      set.count(\n        uniform(5, 100),\n        floor(it),\n        mul(3)\n      ),\n      times(get.count),\n      val(\n        fork(\n          div(get.count),\n          pipe(\n            get.radius,\n            minus(uniform(0, mul(0.2))),\n            plus(uniform(0, 0.3)),\n            plus(get.offset)\n          )\n        )\n      )\n    )\n  )\n\n  const pupil = pipe(\n    set.corners(40),\n    set.count(5),\n    set.primitive('triangle fan'),\n    set.speed(0),\n    set.color(vec3(0)),\n    times(get.count),\n    set.indexR(it, plus(1)),\n    set.index(negate(it), plus(get.count)),\n    set.depth(\n      get.indexR,\n      div(get.count)\n    ),\n    set.alpha(\n      get.indexR,\n      div(get.count)\n    ),\n    set.radius(\n      get.radius,\n      plus(prod(mul(0.2), get.index))\n    ),\n    set.vertex(fork(\n      val([0, 0]),\n      pipe(\n        times(get.corners(plus(1))),\n        val(fork(\n          div(get.corners),\n          get.radius\n        ))\n      )\n    ))\n  )\n\n  const shape = obj({\n    color: get.color,\n    alpha: get.alpha,\n    depth: get.depth,\n    vertex: get.vertex,\n    speed: get.speed,\n    primitive: get.primitive\n  })\n\n  const scene = obj({\n    name: get.name,\n    title: get.title,\n    color: get.color,\n    shapes: get.shapes,\n    radius: get.radius\n  })\n\n  const eye = pipe(\n    set.name(n ? [n] : name),\n    seed(get.name),\n    set.title(title),\n    set.color(vec3(uniform(0.1, 0.2))),\n    set.radius(uniform(0.05, 0.2)),\n    customRng(\n      times(floor(uniform(3, 40))),\n      random\n    ),\n    set.shapes(\n      fork(iris, pupil),\n      shape\n    ),\n    scene\n  )\n\n  return evaluate(root, eye)\n}\n","import {polar} from './effect/polar'\nimport {reflection} from './effect/reflection'\nimport {base} from './effect/base'\n\nconst Regl = require('regl')\nconst resl = require('resl')\nconst Grammar = require('./grammar')\n\nconst gui = {\n  canvas: document.getElementById('canvas'),\n  name: document.getElementById('name'),\n  title: document.getElementById('title'),\n  next: document.getElementById('next'),\n  copy: document.getElementById('copy'),\n  link: document.getElementById('link')\n}\n\nconst regl = Regl(gui.canvas)\nconst drawBase = base(regl)\nconst drawPolar = polar(regl)\nconst drawReflection = reflection(regl)\nlet scene = {\n  color: [0, 0, 0],\n  shapes: [],\n  radius: 0\n}\nlet image = regl.texture({\n  width: 1,\n  height: 1,\n  data: [0, 0, 0, 0]\n})\n\nconst update = hash => {\n  const name = hash ? hash.substr(1) : null\n  if (name === scene.name) return\n  scene = Grammar(name)\n  window.location.hash = scene.name\n  document.title = scene.name + ', ' + scene.title\n  gui.name.innerText = scene.name\n  gui.title.innerText = scene.title\n  gui.link.value = window.location\n}\n\nconst copyLink = () => {\n  gui.link.focus()\n  gui.link.select()\n  let success\n  try {\n    success = document.execCommand('copy')\n  } catch (e) {\n    success = false\n  }\n  gui.link.blur()\n  window.alert(success\n    ? `The link was copied to your clipboard. Spread the W̴̢͇̱̯̱̫̻̙͕͎̟̒̐̃̿ͅȌ̴̰͙͓̟͓̦̥̎́̓͒̕̕R̷̻͎̺͍̆̓̐̚͜Ḑ̸̨̪͖͚̩̳͈̙͖̄̂̋̋̔̓̚ of our dark lord ${scene.name}!`\n    : 'A mysterious power prevented this action.'\n  )\n}\n\nwindow.addEventListener('custom-ready', () => update(window.location.hash || null))\nwindow.addEventListener('hashchange', () => update(window.location.hash))\ngui.next.addEventListener('click', () => update())\ngui.copy.addEventListener('click', copyLink)\n\nregl.frame(() => {\n  gui.canvas.width = window.innerWidth * window.devicePixelRatio\n  gui.canvas.height = window.innerHeight * window.devicePixelRatio\n  regl.clear({color: [...scene.color, 1]})\n  drawBase(() => scene.shapes.forEach(s => drawPolar(s)))\n  drawBase(() => drawReflection({\n    image,\n    radius: scene.radius\n  }))\n})\n\nresl({\n  manifest: {\n    image: {\n      type: 'image',\n      src: 'galaxy1024.png',\n      parser: data => regl.texture({\n        data: data,\n        mag: 'linear',\n        min: 'linear',\n        wrapS: 'mirror',\n        wrapT: 'mirror'\n      })\n    }\n  },\n  onDone: res => {\n    image = res.image\n  }\n})\n"]}